// Function to run Cypress tests
def runCypressTests() {
    sh 'npx cypress run --spec "cypress/e2e/v5/**/*.cy.js" --headless'
}
def maxRetries = 2
def retryCount = 0
def retryInterval = 20 // seconds
env.retryOccurred = false


pipeline {
    agent any
    tools {nodejs "node"}
    parameters {
        gitParameter branchFilter: 'origin/(.*)', defaultValue: 'master', name: 'BRANCH', type: 'PT_BRANCH'
    }
    stages {     
        stage('CleanUp') {
            steps {
                script {
                   sh "git clean -x -f"
                }
            }
        }     
        stage('Build') {
            steps {
                // Checkout source code from version control (e.g., Git)
                git branch: "${params.BRANCH}", url: 'https://github.com/DaniHNS/automated-testing.git'
                // npm check
                sh 'npm -v'
                // Install project dependencies
                sh 'npm install'
                // Set X11 server - common error fix
                sh 'Xvfb -screen 0 1920x1080x24 :99 & export DISPLAY=:99'
                
            }
        }  
        stage('Run Tests') {
            steps {
                script {
                    while (maxRetries >= retryCount) {
                        try {
                            runCypressTests()
                            // break // If the build succeeds, break the loop
                        } catch (Exception e) {
                            retryCount++
                            echo "Retrying (${retryCount}/${maxRetries})..."
                            //env.retryOccurred = true
                            echo "retryOccurred (${env.retryOccurred})..."
                            sleep(time: retryInterval, unit: 'SECONDS')
                            runCypressTests()
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            // Kill X11 server - common error fix
            sh 'pkill Xvfb'
            
        }
        failure {
            script {
                echo "Always - Status/retry(${currentBuild.currentResult}/${env.retryOccurred})..."  
                if (currentBuild.currentResult == 'FAILURE' && env.retryOccurred == true) {
                    echo "Always - Status/retry(${currentBuild.currentResult}/${env.retryOccurred})..."  

                    mail to: "plotkin@hotelnetsolutions.de",
                    subject: "Jenkins Build ${currentBuild.currentResult}: Job ${env.JOB_NAME}",
                    body: """${currentBuild.currentResult}: Job ${env.JOB_NAME}
                        More Info can be found here: ${env.BUILD_URL}
                        Video can be found here: http://jenkins.hns.hotelnetsolutions.de/workspace/BookingE2E-V5/cypress/videos/
                        Trigger the Job: http://jenkins.hns.hotelnetsolutions.de:8081/job/BookingE2E-V6/build?token=Gthr1_8"""
                }
            }
        }
    }

}
